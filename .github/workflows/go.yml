name: build
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.17
      uses: actions/setup-go@v1
      with:
        go-version: 1.17
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Run tests
      run: go test -v ./...
    - name: Build kubectl-tbac Linux binary
      run: |
        go build -o dist/linux/amd64/kubectl-tbac
        zip -j kubectl-tbac-linux dist/linux/amd64/kubectl-tbac
      env:
          GOOS: linux
          GOARCH: amd64
    - name: Build kubectl-tbac Mac binary
      run: |
        go build -o dist/darwin/amd64/kubectl-tbac
        zip -j kubectl-tbac-macos dist/darwin/amd64/kubectl-tbac
      env:
        GOOS: darwin
        GOARCH: amd64
    - name: Build kubectl-tbac Windows binary
      run: |
        go build -o dist/windows/amd64/kubectl-tbac.exe
        zip -j kubectl-tbac-windows dist/windows/amd64/kubectl-tbac.exe
      env:
        GOOS: windows
        GOARCH: amd64
    - name: Get Next Tag
      id: tag_version
      uses: SOLIDSoftworks/semver-tags@1.0.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        tag-prefix: 'v'
        dry-run: true
      env:
       TBAC_VERSION: ${{ steps.tag_version.outputs.semantic-version }}
    - name: Update tbac Version
      run: |
        version=$(cat cmd/root.go |grep version|tr -d \"|awk -F ' ' '{print $NF}')
        sed -i ’s/$version/$TBAC_VERSION/g’ cmd/root.go
        cat root.go
      
    
